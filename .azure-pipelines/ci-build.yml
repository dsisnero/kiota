name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main
      - azure-pipelines

pr: none

variables:
  buildConfiguration: "Release"
  BUILDPLATFORM: "linux/amd64"
  REGISTRY: msgraphprodregistry.azurecr.io # Azure Container Registry
  IMAGE_NAME: public/openapi/kiota # Docker image name
  PREVIEW_BRANCH: "refs/heads/main" # Branch for preview builds
  VERSION_SUFFIX: "" # Version suffix for preview builds

resources:
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release
    - repository: ReleasePipelines
      type: git
      name: "Graph Developer Experiences/release-pipelines"

parameters:
  - name: poolName
    type: string
    default: Azure-Pipelines-1ESPT-ExDShared

  - name: image
    type: string
    default: ubuntu-latest

  - name: os
    type: string
    default: linux

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: ${{ parameters.poolName }}
      image: ${{ parameters.image }}
      os: ${{ parameters.os }}
    sdl:
      sourceAnalysisPool:
        name: Azure-Pipelines-1ESPT-ExDShared # Name of your hosted pool
        image: windows-latest # Name of the image in your pool. If not specified, first image of the pool is used
      sourceRepositoriesToScan:
        exclude:
          - repository: ReleasePipelines
    stages:
      - stage: Build
        jobs:
          - job: build
            steps:
              - task: UseDotNet@2
                displayName: "Use .NET 8"
                inputs:
                  version: 8.x
              - task: UseDotNet@2
                displayName: "Use .NET 9"
                inputs:
                  version: 9.x
              # Install the nuget tool.
              - task: NuGetToolInstaller@1
                displayName: "Install Nuget dependency manager"
                inputs:
                  versionSpec: ">=5.2.0"
                  checkLatest: true

              - task: 1ES.PublishPipelineArtifact@1
                inputs:
                  path: $(Build.ArtifactStagingDirectory)
                  artifact: drop

      - stage: CheckoutAndCopy # Add a new stage
        jobs:
          - template: pipelines/templates/checkout-and-copy-1es.yml@ReleasePipelines
            parameters:
              directory: "kiota"
              repoName: ReleasePipelines
